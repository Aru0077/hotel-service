version: '3.8'

services:
  # PostgreSQL数据库服务
  hotel-db:
    image: postgres:15-alpine
    container_name: hotel-db
    restart: always
    environment:
      POSTGRES_USER: hotel
      POSTGRES_PASSWORD: aruhan0077
      POSTGRES_DB: hotel
      POSTGRES_INITDB_ARGS: "--encoding=UTF8 --locale=C"
    ports:
      - "127.0.0.1:5432:5432"
    volumes:
      - hotel_postgres_data:/var/lib/postgresql/data
    networks:
      - hotel_network
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U hotel -d hotel"]
      interval: 30s
      timeout: 10s
      retries: 3

  # Redis缓存服务
  hotel-redis:
    image: redis:7.4-alpine
    container_name: hotel-redis
    restart: always
    ports:
      - "127.0.0.1:6379:6379"
    volumes:
      - hotel_redis_data:/data
    networks:
      - hotel_network
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 30s
      timeout: 10s
      retries: 3

  # 应用服务
  hotel-app:
    build:
      context: .
      dockerfile: Dockerfile
    container_name: hotel-app
    restart: always
    ports:
      - "3000:3000"
    environment:
      # 基础配置
      NODE_ENV: production
      PORT: 3000

      # 数据库配置
      DATABASE_URL: postgresql://hotel:aruhan0077@hotel-db:5432/hotel?schema=public&connection_limit=20&connect_timeout=60&pool_timeout=20

      # Redis配置
      REDIS_HOST: hotel-redis
      REDIS_PORT: 6379
      REDIS_DB: 0

      # JWT配置
      JWT_SECRET: 89c50182-6eed-431e-80b9-600b0066847f
      JWT_REFRESH_SECRET: bbf6aedf-8a74-42c1-9a48-4fa379b2893b
      JWT_EXPIRES_IN: 15m
      JWT_REFRESH_EXPIRES_IN: 7d

      # 跨域配置
      ALLOWED_ORIGINS: https://admin.yoursite.com,https://merchant.yoursite.com,http://localhost:3000
      
    volumes:
      - hotel_app_logs:/app/logs
    depends_on:
      hotel-db:
        condition: service_healthy
      hotel-redis:
        condition: service_healthy
    networks:
      - hotel_network
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:3000/v1/health"]
      interval: 30s
      timeout: 10s
      retries: 3

# 数据卷定义
volumes:
  hotel_postgres_data:
    driver: local
  hotel_redis_data:
    driver: local
  hotel_app_logs:
    driver: local

# 网络定义
networks:
  hotel_network:
    driver: bridge