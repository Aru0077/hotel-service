services:
  db:
    image: postgres:13-alpine
    restart: always
    environment:
      POSTGRES_USER: hotel
      POSTGRES_PASSWORD: aruhan0077
      POSTGRES_DB: hotel
      # PostgreSQL性能优化配置
      POSTGRES_INITDB_ARGS: "--encoding=UTF8 --locale=C"
    ports:
      - "127.0.0.1:5432:5432"
    volumes:
      - /www/server/docker_data/postgres:/var/lib/postgresql/data
    networks:
      - hotel_network
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U hotel -d hotel"]
      interval: 30s
      timeout: 10s
      retries: 3

  redis:
    image: redis:7.4-alpine
    restart: always
    ports:
      - "127.0.0.1:6379:6379"
    volumes:
      - /www/server/docker_data/redis:/data
    networks:
      - hotel_network
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 30s
      timeout: 10s
      retries: 3

  # 应用服务
  app:
    build:
      context: .
      dockerfile: Dockerfile
      target: production
    restart: always
    ports:
      - "127.0.0.1:3000:3000"
    environment:
      # 基础配置
      - NODE_ENV=production
      - PORT=3000

      # 数据库配置
      - DATABASE_URL=postgresql://hotel:aruhan0077@db:5432/hotel?schema=public

      # Redis配置
      - REDIS_HOST=redis
      - REDIS_PORT=6379
      - REDIS_DB=0
      - REDIS_PASSWORD=aruhan0077

      # JWT配置
      - JWT_SECRET=89c50182-6eed-431e-80b9-600b0066847f
      - JWT_REFRESH_SECRET=bbf6aedf-8a74-42c1-9a48-4fa379b2893b
      - JWT_EXPIRES_IN=15m
      - JWT_REFRESH_EXPIRES_IN=7d
      
    volumes:
      - /www/server/docker_data/app_logs:/app/logs
    depends_on:
      db:
        condition: service_healthy
      redis:
        condition: service_healthy
    networks:
      - hotel_network
    healthcheck:
      test: ["CMD", "wget", "--no-verbose", "--tries=1", "--spider", "http://localhost:3000/v1/health"]
      interval: 30s
      timeout: 10s
      retries: 3

volumes:
  postgres_data:
  redis_data:

networks:
  hotel_network:
    driver: bridge